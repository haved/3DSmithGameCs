#version 330

layout(location = 0) in vec3 vP;
layout(location = 1) in vec3 vertexNormal;
layout(location = 2) in vec3 vertexColor;

uniform mat4 modelspaceMatrix;
uniform mat4 MVP;
uniform vec4 color;
uniform sampler1D sharpnessMap;

out vec4 vertexColor0;
out vec3 vertexNormal0;

out vec3 fragmentPos0;

void main()
{
	vec4 mapData = texture(sharpnessMap, vP.x);
	vec3 newPos = vP * vec3(1, 1+mapData.y, 1-mapData.x);
    gl_Position = MVP * vec4(newPos,1);
	
	vertexNormal0 = cross(normalize(newPos - vec3(vP.x, 0, vP.z)), vec3(1, 0, 0));
	
	vec3 vertCol = vertexColor * color.xyz;
	
	vertexColor0 = vec4(vertCol, color.w);
	vertexNormal0 = (  modelspaceMatrix*vec4(vertexNormal, 0)  ).xyz;
	fragmentPos0 = vP;
}
