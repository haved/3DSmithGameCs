#version 330

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal;
layout(location = 2) in vec3 vertexColor;

uniform mat4 modelspaceMatrix;
uniform mat4 MVP;
uniform vec4 color;
uniform float hotspotMin;
uniform float hotspotMax;
uniform vec3 hotspotEmission;

out vec4 vertexColor0;
out vec3 vertexNormal0;

void main()
{
    gl_Position = MVP * vec4(vertexPosition_modelspace,1);

	vertexColor0 = vec4(vertexColor, 1) * color;
	if(hotspotMax > vertexPosition_modelspace.x && vertexPosition_modelspace.x > hotspotMin)
		vertexColor0 = vec4(normalize(hotspotEmission+vertexColor0.xyz),1);
	vertexNormal0 = normalize((  modelspaceMatrix*vec4(vertexNormal, 0)  ).xyz);
}
