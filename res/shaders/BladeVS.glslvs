#version 330

layout(location = 0) in vec3 flatVertexPos;
layout(location = 1) in vec3 flatVertexNormal;
layout(location = 2) in vec3 vertexColor;
layout(location = 3) in vec3 sharpVertexPos;
layout(location = 4) in vec3 sharpVertexNormal;

uniform mat4 modelspaceMatrix;
uniform mat4 MVP;
uniform vec4 color;
uniform sampler1D sharpnessMap;

out vec4 vertexColor0;
out vec3 vertexNormal0;

out vec3 worldPos0;
out vec3 modelPos0;

void main()
{
	vec4 mapData = texture(sharpnessMap, flatVertexPos.x);
	vec3 normal = sharpVertexNormal * mapData.x + flatVertexNormal * (1-mapData.x);
	
	modelPos0 = sharpVertexPos * mapData.x + flatVertexPos * (1-mapData.x);
	worldPos0 = (modelspaceMatrix*vec4(modelPos0,1)).xyz;
	
	gl_Position = MVP * vec4(modelPos0,1);
	
	vertexNormal0 = (modelspaceMatrix*vec4(normal,0)).xyz;
	vertexColor0 = vec4(vertexColor, 1) * color;
}
