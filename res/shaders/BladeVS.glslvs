#version 330

layout(location = 0) in vec3 vP;
layout(location = 1) in vec3 vertexNormal;
layout(location = 2) in vec3 vertexColor;

uniform mat4 modelspaceMatrix;
uniform mat4 MVP;
uniform vec4 color;
uniform sampler1D sharpnessMap;

out vec4 vertexColor0;

out vec3 vertexNormal0;

out vec3 worldPos0;
out vec3 modelPos0;

void main()
{
	vec4 mapData = texture(sharpnessMap, vP.x);
	
	if(mapData.x+mapData.y<0.1)
	{
		gl_Position = MVP * vec4(vP, 1);
		worldPos0 = (modelspaceMatrix*vec4(vP,1)).xyz;
		modelPos0 = vP;
		
		vertexNormal0 = vec3(0,0,0);
	}
	else
	{
		vec3 newPos = vP * vec3(1, 1+mapData.y*vertexColor.y, 1-(mapData.x*vertexColor.x));
		gl_Position = MVP * vec4(newPos, 1);
		worldPos0 = (modelspaceMatrix*vec4(newPos,1)).xyz;
		modelPos0 = newPos;
		
		vertexNormal0 = normalize(newPos - vP);
	}
	
	vertexColor0 = color;
}
